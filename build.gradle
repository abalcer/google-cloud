import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'com.google.appengine:gradle-appengine-plugin:+'
        classpath 'net.saliman:gradle-properties-plugin:1.4.6'
	}
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'appengine'
apply plugin: 'net.saliman.properties'

group = 'com.brainacademy'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    jcenter()
	mavenCentral()
    maven {
        url 'https://maven-central.storage.googleapis.com'             // Google's mirror of Maven Central
    }
}

dependencies {
    appengineSdk 'com.google.appengine:appengine-java-sdk:+'
    compile 'com.google.appengine:appengine-api-1.0-sdk:+'
    compile 'com.google.appengine:appengine:+'

	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')

    compile 'javax.servlet:jstl:1.2'
    providedRuntime('org.apache.tomcat.embed:tomcat-embed-jasper')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

appengine {
    httpPort = 8090
    downloadSdk = true
    jvmFlags = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000']

    appcfg {
        oauth2 = true
    }
}

[processResources, war].each {
    print project.filterTokens
    it.filter(ReplaceTokens, tokens: (Map<String, String>) project.filterTokens)
}